# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("./../../../../usbmgr.gni")

config("usbnapi_private_config") {
  include_dirs = [
    "${usb_manager_path}/interfaces/kits/js/napi/include",
    "${usb_manager_path}/interfaces/innerkits/native/include",
  ]
}

ohos_shared_library("usb") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
  }

  sources = [ "src/usb_middle.cpp" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "napi:ace_napi",
  ]

  configs = [ "${utils_path}:utils_config" ]

  relative_install_dir = "module"

  subsystem_name = "usb"
  part_name = "usb_manager"
}

ohos_shared_library("usbmanager") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
  }

  sources = [
    "${utils_path}/native/src/struct_parcel.cpp",
    "${utils_path}/native/src/usb_napi_errors.cpp",
    "src/napi_util.cpp",
    "src/usb_info.cpp",
    "src/usbmanager_middle.cpp",
  ]
  configs = [
    "${utils_path}:utils_config",
    ":usbnapi_private_config",
  ]
  deps = [ "${usb_manager_path}/interfaces/innerkits:usbsrv_client" ]

  defines = []
  if (usb_manager_feature_host) {
    defines += [ "USB_MANAGER_FEATURE_HOST" ]
  }
  if (usb_manager_feature_device) {
    defines += [ "USB_MANAGER_FEATURE_DEVICE" ]
  }
  if (usb_manager_feature_port) {
    defines += [ "USB_MANAGER_FEATURE_PORT" ]
  }

  public_external_deps = [ "cJSON:cjson" ]
  external_deps = [
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "drivers_interface_usb:usb_idl_headers_1.2",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_single",
    "napi:ace_napi",
  ]

  relative_install_dir = "module"

  subsystem_name = "usb"
  part_name = "usb_manager"
}

ohos_shared_library("serial") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    integer_overflow = true
    boundary_sanitize = true
    ubsan = true
  }

  defines = [ "SERIAL_NAPI" ]

  sources = [
    "${utils_path}/native/src/usb_napi_errors.cpp",
    "src/napi_util.cpp",
    "src/serial_info.cpp",
    "src/serial_middle.cpp",
  ]
  deps = [ "${usb_manager_path}/interfaces/innerkits:usbsrv_client" ]
  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "drivers_interface_usb:libserial_proxy_1.0",
    "drivers_interface_usb:libserial_stub_1.0",
    "drivers_interface_usb:usb_idl_headers_1.1",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
    "samgr:samgr_proxy",
  ]

  configs = [
    "${utils_path}:utils_config",
    ":usbnapi_private_config",
  ]

  relative_install_dir = "module/usbmanager"
  version_script = "usbmanager.versionscript"

  subsystem_name = "usb"
  part_name = "usb_manager"
}
